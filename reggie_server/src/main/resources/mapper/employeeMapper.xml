<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!--XML映射文件的namespace属性为Mapper接口全限定名一致-->
<mapper namespace="com.reggie.mapper.EmployeeMapper">
    <!--员工登录 XML映射文件中sql语句的id与Mapper接口中的方法名一致，并保持返回类型一致-->
    <!--resultType属性，指的是查询返回的单条记录所封装的类型。-->
    <select id="getByUsername" resultType="com.reggie.entity.Employee">
        select *
        from employee
        where username = #{username}
    </select>

    <!--添加员工-->
    <insert id="save">
        insert into employee(name, username, password, phone, sex, id_number, status, create_time, update_time,
        create_user, update_user)
        values (#{name}, #{username}, #{password}, #{phone}, #{sex}, #{idNumber}, #{status}, #{createTime},
        #{updateTime}, #{createUser}, #{createUser})
    </insert>

    <!--员工分页查询-->
    <select id="PageQuery" resultType="com.reggie.entity.Employee">
        select * from employee
        <where>
            <if test="name != null and name != ''">
                name LIKE CONCAT('%', #{name}, '%')
                <!--                name like "%"#{name}"%"-->
            </if>
        </where>
        order by create_time desc
    </select>


    <!--员工状态修改-->
    <update id="updateStatusById">
        update employee
        set status      = #{status},
        update_user = #{updateUser},
        update_time = #{updateTime}
        where id = #{id}
    </update>


    <!--根据id查询员工-->
    <select id="getById" resultType="com.reggie.entity.Employee">
        select *
        from employee
        where id = #{id}
    </select>

    <update id="update">
        update employee
        <set>
            <if test="username != null">
                username = #{username},
            </if>
            <if test="name != null">
                name = #{name},
            </if>
            <if test="password != null">
                password = #{password},
            </if>
            <if test="phone != null">
                phone = #{phone},
            </if>
            <if test="sex != null">
                sex = #{sex},
            </if>
            <if test="idNumber != null">
                id_Number = #{idNumber},
            </if>
            <if test="updateTime != null">
                update_Time = #{updateTime},
            </if>
            <if test="updateUser != null">
                update_User = #{updateUser},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
        </set>
        where id = #{id}
    </update>


</mapper>
